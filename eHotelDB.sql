-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.hotelchain
(
    hotelchainid SERIAL,
    officeadresses VARCHAR(50) NOT NULL,
    numberofhotels integer CHECK(numberofhotels > 0),
    email VARCHAR(30) NOT NULL,
    phonenumber VARCHAR(20)  NOT NULL,
    primary key (hotelchainid),
    UNIQUE(email, phonenumber),
    
);

CREATE TABLE IF NOT EXISTS public.hotel
(
    hotelID SERIAL,
    rating integer CHECK (-1 < rating < 6),
    numOfRooms integer,
    hoteladdress VARCHAR(50) NOT NULL,
    email VARCHAR(30) NOT NULL,
    phoneNum character varying(15) NOT NULL,
    primary key (hotelID),
    UNIQUE(email, phoneNum)
);

CREATE TABLE IF NOT EXISTS public.room
(
    roomID SERIAL,
    hotelID SERIAL NOT NULL,
    price integer CHECK (price > 0),
    capacity integer CHECK (capacity > 0),
    avail boolean,
    expandability VARCHAR(255),
    amenities VARCHAR(255),
    view VARCHAR(30),
    damage VARCHAR(255),
    primary key (roomID)
    FOREIGN KEY (hotelID) REFERENCES hotel
);

CREATE TABLE IF NOT EXISTS public.employee
(
    employeeID SERIAL,
    managerID SERIAL,
    hotelID integer,
    ename VARCHAR(50) NOT NULL,
    eaddress VARCHAR(50),
    PRIMARY KEY (employeeID),
    UNIQUE (managerID),
    FOREIGN KEY (managerID) REFERENCES employeeID
);


CREATE TABLE IF NOT EXISTS customer
(
	customerID SERIAL, -- Auto-incrementing primary key
	cname VARCHAR(50) NOT NULL,
	caddress VARCHAR(50) NOT NULL,
	registrationDate DATE,

);
ALTER TABLE IF EXISTS customer
    ADD CONSTRAINT defdate
        DEFAULT GETDATE() FOR registrationDate;

CREATE TABLE IF NOT EXISTS booking
(
	bookingID SERIAL PRIMARY KEY, -- Auto-incrementing primary key
	fk_customerID SERIAL,
	fk_roomID SERIAL,
	CONSTRAINT FK_Customer FOREIGN KEY (fk_customerID) REFERENCES customer(customerID),
	CONSTRAINT FK_Room FOREIGN KEY (fk_roomID) REFERENCES room(roomID)
	
);

CREATE TABLE IF NOT EXISTS rent
(
	rentID SERIAL PRIMARY KEY, -- Auto-incrementing primary key
	checkInDate DATE NOT NULL,
	checkOutDate DATE NOT NULL,
	fk_roomID SERIAL,
	fk_employeeID SERIAL,
	fk_customerID SERIAL,
	fk_bookingID SERIAL,
	CONSTRAINT FK_Room FOREIGN KEY (fk_roomID) REFERENCES room(roomID),
	CONSTRAINT FK_Employee FOREIGN KEY (fk_employeeID) REFERENCES employee(employeeID),
	CONSTRAINT FK_Customer FOREIGN KEY (fk_customerID) REFERENCES customer(customerID),
	CONSTRAINT FK_Booking FOREIGN KEY (fk_bookingID) REFERENCES booking(bookingID)
);

CREATE TABLE IF NOT EXISTS rent_archive
(
	rentArchive SERIAL PRIMARY KEY, -- Auto-incrementing primary key
	rentID SERIAL NOT NULL,
	checkInDate DATE NOT NULL,
	checkOutDate DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS booking_archive
(
	bookingArchiveID SERIAL PRIMARY KEY, -- Auto-incrementing primary key
	bookingID SERIAL NOT NULL
);


END;