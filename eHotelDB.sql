-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.hotelchain
(
    hotelchainid integer NOT NULL,
    officeadresses character varying(50) COLLATE pg_catalog."default" NOT NULL,
    numberofhotels integer,
    email character varying(30) COLLATE pg_catalog."default" NOT NULL,
    phonenumber character varying(20) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT hotelchain_pkey PRIMARY KEY (hotelchainid),
    CONSTRAINT hotelchain_email_key UNIQUE (email),
    CONSTRAINT hotelchain_phonenumber_key UNIQUE (phonenumber)
);

CREATE TABLE IF NOT EXISTS public.hotel
(
    "hotelID" integer NOT NULL,
    rating integer,
    "numOfRooms" integer,
    address character varying(50) NOT NULL,
    email character varying(30) NOT NULL,
    "phoneNum" character varying(15) NOT NULL,
    PRIMARY KEY ("hotelID"),
    CONSTRAINT "email and phonenum" UNIQUE (email, "phoneNum")
);

CREATE TABLE IF NOT EXISTS public.room
(
    "roomID" integer NOT NULL,
    "hotelID" integer NOT NULL,
    price integer,
    capacity integer,
    availability boolean,
    expandability character varying,
    amenities character varying,
    view character varying,
    damage character varying,
    PRIMARY KEY ("roomID")
);

CREATE TABLE IF NOT EXISTS public.employee
(
    "employeeID" integer,
    "managerID" integer,
    "hotelID" integer,
    name character varying(50) NOT NULL,
    address character varying(40),
    PRIMARY KEY ("employeeID"),
    CONSTRAINT "managerID" UNIQUE ("managerID")
);

ALTER TABLE IF EXISTS public.room
    ADD CONSTRAINT "hotelID" FOREIGN KEY ("hotelID")
    REFERENCES public.hotel ("hotelID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.employee
    ADD CONSTRAINT "hotelID" FOREIGN KEY ("hotelID")
    REFERENCES public.hotel ("hotelID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

CREATE TABLE IF NOT EXISTS customer
(
	customerID SERIAL PRIMARY KEY, -- Auto-incrementing primary key
	name VARCHAR NOT NULL,
	address VARCHAR NOT NULL,
	registrationDate DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS booking
(
	bookingID SERIAL PRIMARY KEY, -- Auto-incrementing primary key
	fk_customerID INTEGER,
	fk_roomID INTEGER,
	CONSTRAINT FK_Customer FOREIGN KEY (fk_customerID) REFERENCES customer(customerID),
	CONSTRAINT FK_Room FOREIGN KEY (fk_roomID) REFERENCES public.room("roomID")
	
);

CREATE TABLE IF NOT EXISTS rent
(
	rentID SERIAL PRIMARY KEY, -- Auto-incrementing primary key
	checkInDate DATE NOT NULL,
	checkOutDate DATE NOT NULL,
	fk_roomID INTEGER,
	fk_employeeID INTEGER,
	fk_customerID INTEGER,
	fk_bookingID INTEGER,
	CONSTRAINT FK_Room FOREIGN KEY (fk_roomID) REFERENCES public.room("roomID"),
	CONSTRAINT FK_Employee FOREIGN KEY (fk_employeeID) REFERENCES public.employee("employeeID"),
	CONSTRAINT FK_Customer FOREIGN KEY (fk_customerID) REFERENCES customer(customerID),
	CONSTRAINT FK_Booking FOREIGN KEY (fk_bookingID) REFERENCES booking(bookingID)
);

CREATE TABLE IF NOT EXISTS rent_archive
(
	rentArchive SERIAL PRIMARY KEY, -- Auto-incrementing primary key
	rentID INTEGER NOT NULL,
	checkInDate DATE NOT NULL,
	checkOutDate DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS booking_archive
(
	bookingArchiveID SERIAL PRIMARY KEY, -- Auto-incrementing primary key
	bookingID INTEGER NOT NULL
);


END;